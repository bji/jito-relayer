name: Setup Rust
description: Installs rust in a bare metal fashion
runs:
  using: composite
  steps:
    - name: Generate workflow id (for caching)
      run: echo "WORKFLOW_ID=${{github.workflow}}" >> $GITHUB_ENV
      shell: bash

    - run: echo ${{github}};
      shell: bash
    - run: echo ${{env}};
      shell: bash
    - run: echo ${{vars}};
      shell: bash

    - run: echo ${{job}};
      shell: bash

    - run: echo ${{jobs}};
      shell: bash
    - run: echo ${{steps}};
      shell: bash

    - run: echo ${{runner}};
      shell: bash
    - run: echo ${{secrets}};
      shell: bash
    - run: echo ${{strategy}};
      shell: bash
    - run: echo ${{matrix}};
      shell: bash
    - run: echo ${{needs}};
      shell: bash
    - run: echo ${{inputs}};
      shell: bash
    - name: Install Protobuf
      run: |
        export PROTOC_VERSION=21.12 && \
        export PROTOC_ZIP=protoc-$PROTOC_VERSION-linux-x86_64.zip && \
        curl -Ss -OL https://github.com/google/protobuf/releases/download/v$PROTOC_VERSION/$PROTOC_ZIP \
        && sudo unzip -o $PROTOC_ZIP -d /usr/local bin/protoc \
        && sudo unzip -o $PROTOC_ZIP -d /usr/local include/* \
        && rm -f $PROTOC_ZIP
      shell: bash

    - name: cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: cache rust files
      uses: actions/cache@v3
      with:
        path: |
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/*.rs') }}

    - name: Check rust version before
      run: |
        rustc --version || true;
        cargo --version || true;
        cargo clippy --version || true;
        cargo fmt --version || true;
      shell: bash

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: clippy, rustfmt

    - name: Check rust version after
      run: |
        rustc --version;
        cargo --version;
        cargo clippy --version;
        cargo fmt --version;
      shell: bash
